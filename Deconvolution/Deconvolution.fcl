BEGIN_PROLOG
standard_deconvolution:
{
  module_type:            "Deconvolution"
  InputModule:            "opdigi"
  InstanceName:           ""    

  LineNoiseRMS:           3       # Pedestal RMS in [ADC] counts, likely an underestimate
  TimeBegin:              0       # In [us] 
  TimeEnd:                16      # In [us] 
  PreTrigger:             100     # In [ticks] 25
  Pedestal:               1500    # In [ADC]
  Samples:                1000    # MaxTimewindow in [ticks]
  PedestalBuffer:         20      # In [ticks], should always be smaller than PreTrigger!
  Scale:                  0.001   # Sacilng of resulting wvfs should be multiplied by 1/samples                                         
  DigiDataFile:           "fbk_deco.txt"    
  DigiDataColumn:         0
  
  AutoScale:              false   # Scaling based on SPE amp. from template 
  ApplyPhantomPretrigger: false   # Add phantom pretrigger 
  ApplyPrefilter:         false   # Filter the waveforms before deconvolution 
  ApplyPostfilter:        true    # Filter the waveforms after deconvolution
  ApplyPostBLCorrection:  true    # Correct baseline after the deconvolution process

  WfmPostfilter: {
    Name: "Gauss"
    Cutoff: 2.8   # In MHz
  }

  WfmPrefilter: {
    Name: "Gauss"
    Cutoff: 2.    # In MHz
  }

  WfmFilter: {
    Name: "Gauss"
    Cutoff: 1.
  }
}

standard_gauss_deconvolution: @local::standard_deconvolution

standard_wiener_deconvolution:@local::standard_deconvolution
standard_wiener_deconvolution.WfmFilter.Name: "Wiener"
standard_wiener_deconvolution.AutoScale: true
standard_wiener_deconvolution.ApplyPostBLCorrection: false

deconvolution_snr: @local::standard_deconvolution
deconvolution_snr.OutputProduct: "SNR"

deconvolution_H: @local::standard_deconvolution
deconvolution_H.OutputProduct: "H"

deconvolution_S: @local::standard_deconvolution
deconvolution_S.OutputProduct: "S"

deconvolution_N: @local::standard_deconvolution
deconvolution_N.OutputProduct: "N"

deconvolution_G0: @local::standard_deconvolution
deconvolution_G0.OutputProduct: "G0"

deconvolution_G1: @local::standard_deconvolution
deconvolution_G1.OutputProduct: "G1"

deconvolution_G: @local::standard_deconvolution
deconvolution_G.OutputProduct: "G"

deconvolution_V: @local::standard_deconvolution
deconvolution_V.OutputProduct: "V"

deconvolution_v: @local::standard_deconvolution
deconvolution_v.OutputProduct: "v"

END_PROLOG
